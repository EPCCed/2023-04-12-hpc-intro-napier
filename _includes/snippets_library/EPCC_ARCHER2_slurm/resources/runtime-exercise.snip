> ## Benchmarking the parallel performance
> Modify your job script to run on multiple cores and evaluate the performance of `sharpen`
> on a variety of different core counts and use multiple runs to complete a table like the one
> below.
>
> If you examine the log file you will see that it contains two timings: the total time taken by the
> entire program (including IO) and the time taken solely by the calculation. The image input
> and output is not parallelised so this is a serial overhead, performed by a single processor.
> The calculation part is, in theory, perfectly parallel (each processor operates on different parts
> of the image) so this should get faster on more cores. The IO time in the table below is the
> difference between the calculation time and the overall run time; the Calculation core seconds is the
> *calculation time* multiplied by the number of cores.
> 
> | Cores      | Overall run time (s) | Calculation time (s) | IO time (s) | Calculation core seconds |
> |------------|----------------------|----------------------|-------------|--------------------------|
> | 1 (serial) |                      |                      |             |                          |
> | 2          |                      |                      |             |                          |
> | 4          |                      |                      |             |                          |                    
> | 8          |                      |                      |             |                          | 
> | 16         |                      |                      |             |                          | 
> | 32         |                      |                      |             |                          | 
> | 64         |                      |                      |             |                          |              
> | 128        |                      |                      |             |                          | 
> | 256        |                      |                      |             |                          |
> 
> Look at your results â€“ do they make sense? Given the structure of the code, you would
> expect the IO time to be roughly constant, and the performance of the calculation to increase
> linearly with the number of cores: this would give a roughly constant figure for the Calculation core
> seconds. Is this what you observe?
> > ## Solution
> >
> > The table below shows example timings for runs on {{ site.host_name }}
> >
> > | Cores      | Overall run time (s) | Calculation time (s) | IO time (s) |       Calculation core seconds |
> > |-----------:|---------------------:|---------------------:|------------:|-------------------------------:|
> > |          1 |                3.188 |                2.890 |       0.298 |                          2.890 |
> > |          2 |                1.697 |                1.432 |       0.265 |                          2.864 |
> > |          4 |                1.068 |                0.716 |       0.352 |                          2.864 |
> > |          8 |                0.717 |                0.372 |       0.345 |                          2.976 |
> > |         16 |                0.516 |                0.181 |       0.335 |                          2.896 |
> > |         32 |                0.393 |                0.093 |       0.300 |                          2.976 |
> > |         64 |                0.412 |                0.053 |       0.359 |                          3.392 |
> > |        128 |                0.317 |                0.030 |       0.287 |                          3.840 |
> > |        256 |                0.312 |                0.018 |       0.294 |                          4.608 |
> >
> {: .solution}
{: .challenge}